@startuml task1_class

interface Linable{
    void setPosition(Position position)
    Position getPosition()
    int getValue()
}

interface Sorter{
    void load(int[] elements)
    void sort()
    String getPlan()
}

enum Gourd{
    int r
    int g
    int b
    Position position
    Gourd getGourdByRank()
    int rank()
    String toString()
    void setPosition()
    Position getPosition()
    void swapPosition()
    int getValue()
}

class Geezer{
    Geezer theGeezer
    Sorter sorter
    Geezer getTheGeezer()
    String lineUp()
    void setSorter()
}

class BubbleSorter{
    int[] a
    String plan
}

class Line{
    Position[] positions
    void put()
    Linable get()
    String toString()
    Linable[] toArray()
}

class Position{
    Linable linable
    void setLinable()
}

Gourd --|> Linable
BubbleSorter --|> Sorter
Line --* Position
Geezer --* Sorter
Position --* Linable

@enduml